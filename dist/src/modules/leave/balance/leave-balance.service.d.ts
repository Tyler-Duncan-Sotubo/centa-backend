import { UpdateLeaveBalanceDto } from './dto/update-leave-balance.dto';
import { db } from 'src/drizzle/types/drizzle';
import { AuditService } from 'src/modules/audit/audit.service';
import { CacheService } from 'src/common/cache/cache.service';
export declare class LeaveBalanceService {
    private readonly db;
    private readonly auditService;
    private readonly cache;
    constructor(db: db, auditService: AuditService, cache: CacheService);
    protected table: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "leave_balances";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "leave_balances";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                isPrimaryKey: true;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            companyId: import("drizzle-orm/pg-core").PgColumn<{
                name: "company_id";
                tableName: "leave_balances";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            employeeId: import("drizzle-orm/pg-core").PgColumn<{
                name: "employee_id";
                tableName: "leave_balances";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            leaveTypeId: import("drizzle-orm/pg-core").PgColumn<{
                name: "leave_type_id";
                tableName: "leave_balances";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            year: import("drizzle-orm/pg-core").PgColumn<{
                name: "year";
                tableName: "leave_balances";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            entitlement: import("drizzle-orm/pg-core").PgColumn<{
                name: "entitlement";
                tableName: "leave_balances";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            used: import("drizzle-orm/pg-core").PgColumn<{
                name: "used";
                tableName: "leave_balances";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            balance: import("drizzle-orm/pg-core").PgColumn<{
                name: "balance";
                tableName: "leave_balances";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "leave_balances";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: true;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "leave_balances";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: true;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    private tags;
    create(leaveTypeId: string, companyId: string, employeeId: string, year: number, entitlement: string, used: string, balance: string): Promise<{
        id: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        companyId: string;
        employeeId: string;
        year: number;
        used: string;
        leaveTypeId: string;
        entitlement: string;
        balance: string;
    }[]>;
    findAll(companyId: string): Promise<({
        employeeId: string;
        companyId: any;
        name: string;
        department: any;
        jobRole: string | null;
        totalBalance: string;
    } | {
        employeeId: string;
        companyId: any;
        name: string;
        department: any;
        jobRole: string | null;
        totalBalance: string;
    } | {
        employeeId: string;
        companyId: any;
        name: string;
        department: any;
        jobRole: string | null;
        totalBalance: string;
    } | {
        employeeId: string;
        companyId: any;
        name: string;
        department: any;
        jobRole: string | null;
        totalBalance: string;
    })[]>;
    findByEmployeeId(employeeId: string): Promise<{
        leaveTypeId: string;
        leaveTypeName: string;
        year: number;
        entitlement: string;
        used: string;
        balance: string;
    }[]>;
    findBalanceByLeaveType(companyId: string, employeeId: string, leaveTypeId: string, currentYear: number): Promise<{
        id: string;
        companyId: string;
        employeeId: string;
        leaveTypeId: string;
        year: number;
        entitlement: string;
        used: string;
        balance: string;
        createdAt: Date | null;
        updatedAt: Date | null;
    }>;
    update(balanceId: string, dto: UpdateLeaveBalanceDto): Promise<{
        id: string;
        companyId: string;
        employeeId: string;
        leaveTypeId: string;
        year: number;
        entitlement: string;
        used: string;
        balance: string;
        createdAt: Date | null;
        updatedAt: Date | null;
    }>;
    updateLeaveBalanceOnLeaveApproval(leaveTypeId: string, employeeId: string, year: number, totalLeaveDays: string, userId: string): Promise<{
        id: string;
        companyId: string;
        employeeId: string;
        leaveTypeId: string;
        year: number;
        entitlement: string;
        used: string;
        balance: string;
        createdAt: Date | null;
        updatedAt: Date | null;
    }>;
}
