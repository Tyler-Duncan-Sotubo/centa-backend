import { CreateGoalDto } from './dto/create-goal.dto';
import { UpdateGoalDto } from './dto/update-goal.dto';
import { db } from 'src/drizzle/types/drizzle';
import { User } from 'src/common/types/user.type';
import { AuditService } from 'src/modules/audit/audit.service';
import { CacheService } from 'src/common/cache/cache.service';
export declare class GoalsService {
    private readonly db;
    private readonly auditService;
    private readonly cache;
    constructor(db: db, auditService: AuditService, cache: CacheService);
    private ttlListSeconds;
    private ttlItemSeconds;
    private tags;
    create(dto: CreateGoalDto, user: User): Promise<{
        id: string;
        updatedAt: Date | null;
        companyId: string;
        description: string | null;
        startDate: string;
        status: string | null;
        cycleId: string;
        title: string;
        employeeId: string | null;
        type: string | null;
        weight: number | null;
        parentGoalId: string | null;
        dueDate: string;
        assignedAt: Date | null;
        assignedBy: string;
        isPrivate: boolean | null;
        isArchived: boolean | null;
    }>;
    findAll(companyId: string, status?: string): Promise<({
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    })[]>;
    findAllByEmployeeId(companyId: string, employeeId: string, status?: string): Promise<({
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    })[]>;
    findOne(id: string, companyId: string): Promise<{
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    }>;
    update(id: string, dto: UpdateGoalDto, user: User): Promise<{
        id: string;
        companyId: string;
        cycleId: string;
        employeeId: string | null;
        title: string;
        description: string | null;
        type: string | null;
        status: string | null;
        weight: number | null;
        parentGoalId: string | null;
        startDate: string;
        dueDate: string;
        assignedAt: Date | null;
        assignedBy: string;
        isPrivate: boolean | null;
        updatedAt: Date | null;
        isArchived: boolean | null;
    }>;
    remove(id: string, user: User): Promise<{
        message: string;
    }>;
    publishGoalAndSubGoals(goalId: string): Promise<void>;
    archiveForEmployee(goalId: string, employeeId: string, user: User): Promise<{
        message: string;
    }>;
}
