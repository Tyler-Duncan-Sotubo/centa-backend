import { GoalsService } from './goals.service';
import { GoalActivityService } from './goal-activity.service';
import { CreateGoalDto } from './dto/create-goal.dto';
import { UpdateGoalDto } from './dto/update-goal.dto';
import { AddGoalProgressDto } from './dto/add-goal-progress.dto';
import { AddGoalCommentDto } from './dto/add-goal-comment.dto';
import { UploadGoalAttachmentDto } from './dto/upload-goal-attachment.dto';
import { UpdateGoalAttachmentDto } from './dto/update-goal-attachment.dto';
import { User } from 'src/common/types/user.type';
import { BaseController } from 'src/common/interceptor/base.controller';
export declare class GoalsController extends BaseController {
    private readonly goalsService;
    private readonly activityService;
    constructor(goalsService: GoalsService, activityService: GoalActivityService);
    create(dto: CreateGoalDto, user: User): Promise<{
        id: string;
        updatedAt: Date | null;
        companyId: string;
        description: string | null;
        startDate: string;
        status: string | null;
        cycleId: string;
        title: string;
        employeeId: string | null;
        type: string | null;
        weight: number | null;
        parentGoalId: string | null;
        dueDate: string;
        assignedAt: Date | null;
        assignedBy: string;
        isPrivate: boolean | null;
        isArchived: boolean | null;
    }>;
    findAll(user: User, status: string): Promise<({
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    })[]>;
    findAllByEmployeeId(employeeId: string, user: User, status?: string): Promise<({
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    } | {
        progress: number;
        id: string;
        title: string;
        description: string | null;
        parentGoalId: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        jobRoleName: string | null;
    })[]>;
    findOne(id: string, user: User): Promise<{
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    } | {
        updates: {
            id: string;
            progress: number;
            note: string | null;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        comments: {
            id: string;
            comment: string;
            createdAt: Date | null;
            createdBy: string;
            createdByName: string;
        }[];
        attachments: {
            id: string;
            fileName: string;
            createdAt: Date | null;
            uploadedBy: string;
            uploadedByName: string;
            fileUrl: string;
            comment: string;
        }[];
        id: string;
        title: string;
        description: string | null;
        dueDate: string;
        startDate: string;
        cycleId: string;
        cycleName: string;
        weight: number | null;
        status: string | null;
        isArchived: boolean | null;
        avatarUrl: string | null;
        employee: string;
        employeeId: any;
        departmentName: any;
        departmentId: any;
        office: string;
        manager: string;
    }>;
    update(id: string, dto: UpdateGoalDto, user: User): Promise<{
        id: string;
        companyId: string;
        cycleId: string;
        employeeId: string | null;
        title: string;
        description: string | null;
        type: string | null;
        status: string | null;
        weight: number | null;
        parentGoalId: string | null;
        startDate: string;
        dueDate: string;
        assignedAt: Date | null;
        assignedBy: string;
        isPrivate: boolean | null;
        updatedAt: Date | null;
        isArchived: boolean | null;
    }>;
    publish(id: string): Promise<void>;
    remove(id: string, user: User): Promise<{
        message: string;
    }>;
    archiveForEmployee(id: string, employeeId: string, user: User): Promise<{
        message: string;
    }>;
    addProgress(goalId: string, dto: AddGoalProgressDto, user: User): Promise<{
        id: string;
        createdAt: Date | null;
        goalId: string;
        progress: number;
        note: string | null;
        createdBy: string;
    }>;
    addComment(goalId: string, dto: AddGoalCommentDto, user: User): Promise<{
        message: string;
    }>;
    updateComment(commentId: string, comment: string, user: User): Promise<{
        id: string;
        goalId: string;
        authorId: string;
        comment: string;
        isPrivate: boolean | null;
        createdAt: Date | null;
        updatedAt: Date | null;
    }>;
    deleteComment(commentId: string, user: User): Promise<{
        message: string;
    }>;
    uploadAttachment(goalId: string, dto: UploadGoalAttachmentDto, user: User): Promise<{
        id: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        goalId: string;
        comment: string;
        uploadedById: string;
        fileUrl: string;
        fileName: string;
    }>;
    updateAttachment(attachmentId: string, dto: UpdateGoalAttachmentDto, user: User): Promise<{
        id: string;
        goalId: string;
        comment: string;
        uploadedById: string;
        fileUrl: string;
        fileName: string;
        createdAt: Date | null;
        updatedAt: Date | null;
    }>;
    deleteAttachment(attachmentId: string, user: User): Promise<void>;
}
