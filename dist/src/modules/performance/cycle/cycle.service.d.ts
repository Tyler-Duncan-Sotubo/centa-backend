import { CreateCycleDto } from './dto/create-cycle.dto';
import { UpdateCycleDto } from './dto/update-cycle.dto';
import { AuditService } from 'src/modules/audit/audit.service';
import { db } from 'src/drizzle/types/drizzle';
import { User } from 'src/common/types/user.type';
export declare class CycleService {
    private readonly auditService;
    private readonly db;
    constructor(auditService: AuditService, db: db);
    create(createCycleDto: CreateCycleDto, companyId: string, userId?: string): Promise<{
        id: string;
        name: string;
        createdAt: Date | null;
        companyId: string;
        description: string | null;
        status: string | null;
        startDate: string;
        endDate: string;
        isAutoGenerated: boolean | null;
    }>;
    findAll(companyId: string): Promise<{
        id: string;
        companyId: string;
        name: string;
        description: string | null;
        startDate: string;
        endDate: string;
        status: string | null;
        createdAt: Date | null;
        isAutoGenerated: boolean | null;
    }[]>;
    findCurrent(companyId: string): Promise<{
        id: string;
        companyId: string;
        name: string;
        description: string | null;
        startDate: string;
        endDate: string;
        status: string | null;
        createdAt: Date | null;
        isAutoGenerated: boolean | null;
    }>;
    findOne(id: string): Promise<{
        id: string;
        companyId: string;
        name: string;
        description: string | null;
        startDate: string;
        endDate: string;
        status: string | null;
        createdAt: Date | null;
        isAutoGenerated: boolean | null;
    }>;
    getLastCycle(companyId: string): Promise<{
        id: string;
        companyId: string;
        name: string;
        description: string | null;
        startDate: string;
        endDate: string;
        status: string | null;
        createdAt: Date | null;
        isAutoGenerated: boolean | null;
    }>;
    update(id: string, updateCycleDto: UpdateCycleDto, user: User): Promise<{
        id: string;
        companyId: string;
        name: string;
        description: string | null;
        startDate: string;
        endDate: string;
        status: string | null;
        createdAt: Date | null;
        isAutoGenerated: boolean | null;
    }>;
    remove(id: string, user: User): Promise<void>;
}
