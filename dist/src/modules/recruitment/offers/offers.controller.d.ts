import { OffersService } from './offers.service';
import { CreateOfferDto } from './dto/create-offer.dto';
import { User } from 'src/common/types/user.type';
import { GetOfferTemplateVariablesDto } from './dto/get-offer-template-variables.dto';
import { BaseController } from 'src/common/interceptor/base.controller';
import { UpdateOfferDto } from './dto/update-offer.dto';
import { SendOffersService } from './send-offer.service';
import { SignOfferDto } from './dto/signed-offer.dto';
export declare class OffersController extends BaseController {
    private readonly offersService;
    private readonly sendOffersService;
    constructor(offersService: OffersService, sendOffersService: SendOffersService);
    create(createOfferDto: CreateOfferDto, user: User): Promise<{
        id: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        currency: string;
        companyId: string;
        startDate: string | null;
        status: "pending" | "accepted" | "sent" | "declined" | "expired";
        createdBy: string | null;
        templateId: string | null;
        expiresAt: Date | null;
        applicationId: string;
        signingMethod: string;
        salary: string | null;
        letterUrl: string | null;
        signedLetterUrl: string | null;
        signingProviderEnvelopeId: string | null;
        signingUrl: string | null;
        signedAt: Date | null;
        sentAt: Date | null;
        version: number | null;
        pdfData: Record<string, any>;
    }>;
    getTemplateVariables(dto: GetOfferTemplateVariablesDto, user: User): Promise<{
        variables: string[];
        autoFilled: Record<string, string>;
        templateContent: string;
    }>;
    getTemplateVariablesFromOffer(id: string): Promise<{
        variables: string[];
        autoFilled: Record<string, string>;
        templateContent: string;
    }>;
    findAll(user: User): Omit<import("drizzle-orm/pg-core").PgSelectBase<"offers", {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "offers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        applicationId: import("drizzle-orm/pg-core").PgColumn<{
            name: "application_id";
            tableName: "offers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        templateId: import("drizzle-orm/pg-core").PgColumn<{
            name: "template_id";
            tableName: "offers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "offers";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "pending" | "accepted" | "sent" | "declined" | "expired";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["pending", "accepted", "sent", "declined", "expired"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        salary: import("drizzle-orm/pg-core").PgColumn<{
            name: "salary";
            tableName: "offers";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sentAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "sent_at";
            tableName: "offers";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        startDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "start_date";
            tableName: "offers";
            dataType: "string";
            columnType: "PgDateString";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        candidateFullName: import("drizzle-orm/pg-core").PgColumn<{
            name: "full_name";
            tableName: "candidates";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        candidateEmail: import("drizzle-orm/pg-core").PgColumn<{
            name: "email";
            tableName: "candidates";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        jobTitle: import("drizzle-orm/pg-core").PgColumn<{
            name: "title";
            tableName: "job_postings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        letterUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "letter_url";
            tableName: "offers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
        signedLetterUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "signed_letter_url";
            tableName: "offers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
    }, "partial", Record<"offers", "not-null"> & {
        applications: "not-null";
    } & {
        job_postings: "not-null";
    } & {
        candidates: "not-null";
    }, false, "where", {
        id: string;
        applicationId: string;
        templateId: string | null;
        status: "pending" | "accepted" | "sent" | "declined" | "expired";
        salary: string | null;
        sentAt: Date | null;
        startDate: string | null;
        candidateFullName: string;
        candidateEmail: string;
        jobTitle: string;
        letterUrl: string | null;
        signedLetterUrl: string | null;
    }[], {
        id: import("drizzle-orm/pg-core").PgColumn<{
            name: "id";
            tableName: "offers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        applicationId: import("drizzle-orm/pg-core").PgColumn<{
            name: "application_id";
            tableName: "offers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        templateId: import("drizzle-orm/pg-core").PgColumn<{
            name: "template_id";
            tableName: "offers";
            dataType: "string";
            columnType: "PgUUID";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        status: import("drizzle-orm/pg-core").PgColumn<{
            name: "status";
            tableName: "offers";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "pending" | "accepted" | "sent" | "declined" | "expired";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["pending", "accepted", "sent", "declined", "expired"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        salary: import("drizzle-orm/pg-core").PgColumn<{
            name: "salary";
            tableName: "offers";
            dataType: "string";
            columnType: "PgNumeric";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        sentAt: import("drizzle-orm/pg-core").PgColumn<{
            name: "sent_at";
            tableName: "offers";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        startDate: import("drizzle-orm/pg-core").PgColumn<{
            name: "start_date";
            tableName: "offers";
            dataType: "string";
            columnType: "PgDateString";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        candidateFullName: import("drizzle-orm/pg-core").PgColumn<{
            name: "full_name";
            tableName: "candidates";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        candidateEmail: import("drizzle-orm/pg-core").PgColumn<{
            name: "email";
            tableName: "candidates";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        jobTitle: import("drizzle-orm/pg-core").PgColumn<{
            name: "title";
            tableName: "job_postings";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        letterUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "letter_url";
            tableName: "offers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
        signedLetterUrl: import("drizzle-orm/pg-core").PgColumn<{
            name: "signed_letter_url";
            tableName: "offers";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 500;
        }>;
    }>, "where">;
    findOne(id: string): string;
    update(id: string, updateOfferDto: UpdateOfferDto, user: User): Promise<{
        status: string;
        message: string;
    }>;
    sendOffer(offerId: string, email: string, user: User): Promise<{
        status: string;
        message: string;
    }>;
    signOffer(dto: SignOfferDto): Promise<{
        status: string;
        message: string;
    }>;
    verifyOffer(token: string): Promise<{
        id: string;
        companyId: string;
        createdAt: Date | null;
        updatedAt: Date | null;
        companyName: string;
        jobTitle: string;
        candidateName: string;
        candidateId: string;
        companyLogo: string;
        letterUrl: string | null;
        status: "pending" | "accepted" | "sent" | "declined" | "expired";
    }>;
}
