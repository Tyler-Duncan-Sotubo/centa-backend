import { CreateCompanyTaxDto } from './dto/create-company-tax.dto';
import { UpdateCompanyTaxDto } from './dto/update-company-tax.dto';
import { AuditService } from 'src/modules/audit/audit.service';
import { db } from 'src/drizzle/types/drizzle';
import { User } from 'src/common/types/user.type';
import { CompanySettingsService } from 'src/company-settings/company-settings.service';
import { PinoLogger } from 'nestjs-pino';
import { CacheService } from 'src/common/cache/cache.service';
export declare class CompanyTaxService {
    private readonly db;
    private readonly audit;
    private readonly companySettings;
    private readonly logger;
    private readonly cache;
    protected table: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "company_tax_details";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "company_tax_details";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                isPrimaryKey: true;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            companyId: import("drizzle-orm/pg-core").PgColumn<{
                name: "company_id";
                tableName: "company_tax_details";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            tin: import("drizzle-orm/pg-core").PgColumn<{
                name: "tin";
                tableName: "company_tax_details";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            vatNumber: import("drizzle-orm/pg-core").PgColumn<{
                name: "vat_number";
                tableName: "company_tax_details";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            nhfCode: import("drizzle-orm/pg-core").PgColumn<{
                name: "nhf_code";
                tableName: "company_tax_details";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            pensionCode: import("drizzle-orm/pg-core").PgColumn<{
                name: "pension_code";
                tableName: "company_tax_details";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "company_tax_details";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "company_tax_details";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: true;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: undefined;
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    constructor(db: db, audit: AuditService, companySettings: CompanySettingsService, logger: PinoLogger, cache: CacheService);
    private oneKey;
    private burst;
    create(dto: CreateCompanyTaxDto, user: User): Promise<{
        id: string;
        createdAt: Date;
        updatedAt: Date | null;
        companyId: string;
        tin: string;
        vatNumber: string | null;
        nhfCode: string | null;
        pensionCode: string | null;
    }>;
    findOne(companyId: string): Promise<{
        id: string;
        companyId: string;
        tin: string;
        vatNumber: string | null;
        nhfCode: string | null;
        pensionCode: string | null;
        createdAt: Date;
        updatedAt: Date | null;
    }>;
    update(updateCompanyTaxDto: UpdateCompanyTaxDto, user: User): Promise<{
        id: string;
        companyId: string;
        tin: string;
        vatNumber: string | null;
        nhfCode: string | null;
        pensionCode: string | null;
        createdAt: Date;
        updatedAt: Date | null;
    }>;
}
